{"version":3,"sources":["reducers/history.js","reducers/isState.js","reducers/reducer.js","store.js","action/action.js","components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["defaultHis","squares","Array","fill","map","location","isWin","id","historyReducer","state","action","type","slice","stepNumber","concat","item","defaultState","idX","idY","isNext","isReverse","isStateReducer","move","X","Y","reducer","combineReducers","history","status","store","createStore","compose","window","devToolsExtension","f","nSquareToWin","calculateWinner","m","n","win","tmpRowTop","tmpRowBot","tmpColTop","tmpColBot","temp","i","j","k","val","x","y","direction","reverse","jumpTo","resetState","clickIsState","clickHis","resetHis","Square","props","rs","className","onClick","value","SquareRow","handleClick","hisNow","current","length","squaresNow","row","idx","tmp","dispatch","this","squareRow","square","winner","rowIdx","key","React","PureComponent","connect","Board","board","Game","handleReverse","handleReset","moves","step","descr","arrow","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7dbe593f.chunk.js","sourcesContent":["const defaultHis = [\n  {\n    squares: Array(20)\n      .fill(null)\n      .map(() => Array(20).fill(null)),\n    location: '',\n    isWin: null,\n    id: 0\n  }\n];\n\nconst historyReducer = (state = defaultHis, action) => {\n  switch (action.type) {\n    case 'CLICK_SQUARE_HIS':\n      return [...state.slice(0, action.stepNumber + 1).concat(action.item)];\n    case 'RESET_HIS':\n      return defaultHis;\n    default:\n      return state;\n  }\n};\n\nexport default historyReducer;\n","const defaultState = {\n  stepNumber: 0,\n  idX: -1,\n  idY: -1,\n  isNext: true,\n  isReverse: false\n};\n\nconst isStateReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'REVERSE':\n      return { ...state, isReverse: !state.isReverse };\n    case 'JUMP_TO':\n      return {\n        ...state,\n        stepNumber: action.move,\n        isNext: action.move % 2 === 0\n      };\n    case 'RESET_IS_STATE':\n      return defaultState;\n    case 'CLICK_SQUARE_STATE':\n      return {\n        ...state,\n        isNext: !state.isNext,\n        stepNumber: state.stepNumber + 1,\n        idX: action.X,\n        idY: action.Y\n      };\n    default:\n      return state;\n  }\n};\n\nexport default isStateReducer;\n","import { combineReducers } from 'redux';\nimport history from './history';\nimport status from './isState';\n\nconst reducer = combineReducers({\n  history,\n  status\n});\n\nexport default reducer;\n","import { createStore, compose } from 'redux';\nimport reducer from './reducers/reducer';\n\nconst store = createStore(\n  reducer,\n  compose(window.devToolsExtension ? window.devToolsExtension() : f => f)\n);\n\nexport default store;\n","const nSquareToWin = 5;\n\nfunction calculateWinner(squares, m, n) {\n  if (m === -1 && n === -1) return null;\n  let win;\n  let tmpRowTop = m;\n  let tmpRowBot = m;\n  let tmpColTop = n;\n  let tmpColBot = n;\n  // xet cac vi tri xung quanh diem danh\n  let temp = 1;\n  while (tmpRowTop > 0 && temp !== 5) {\n    tmpRowTop -= 1;\n    temp += 1;\n  }\n\n  temp = 1;\n  while (tmpColTop > 0 && temp !== 5) {\n    tmpColTop -= 1;\n    temp += 1;\n  }\n\n  temp = 1;\n  while (tmpRowBot < 19 && temp !== 5) {\n    tmpRowBot += 1;\n    temp += 1;\n  }\n\n  temp = 1;\n  while (tmpColBot < 19 && temp !== 5) {\n    tmpColBot += 1;\n    temp += 1;\n  }\n\n  for (let i = tmpRowTop; i <= tmpRowBot; i += 1) {\n    for (let j = tmpColTop; j <= tmpColBot; j += 1) {\n      // Kiểm trang NSquareToWin ô liên tiếp từ ô xuất phát sang phải, xuống góc phải dưới, xuống góc trái dưới\n      // Nếu có NSquareToWin - 1 cặp liên tiếp giống nhau thì thắng\n      // Direction: ToRight, ToRightDown, ToDown, ToLeftDown\n      // eslint-disable-next-line no-continue\n      if (!squares[i][j]) continue;\n\n      // TH1: chan 2 dau ngang\n      win = true;\n      // TH vuot qua ban co va bi chan 2 dau\n      if (\n        j - 1 >= 0 &&\n        j + nSquareToWin < 20 &&\n        squares[i][j - 1] &&\n        squares[i][j + 5] &&\n        squares[i][j] !== squares[i][j - 1] &&\n        squares[i][j] !== squares[i][j + 5]\n      )\n        win = false;\n      for (let k = 0; k < nSquareToWin - 1 && win; k += 1) {\n        if (j + k === 19 || squares[i][j + k] !== squares[i][j + k + 1]) {\n          win = false;\n          break;\n        }\n      }\n      if (win) return { val: squares[i][j], x: j, y: i, direction: 'Ngang' };\n\n      // TH1: chan 2 dau doc\n      win = true;\n      if (\n        i - 1 >= 0 &&\n        i + nSquareToWin < 20 &&\n        squares[i - 1][j] &&\n        squares[i + 5][j] &&\n        squares[i][j] !== squares[i - 1][j] &&\n        squares[i][j] !== squares[i + 5][j]\n      )\n        win = false;\n      for (let k = 0; k < nSquareToWin - 1 && win; k += 1) {\n        if (i + k === 19 || squares[i + k][j] !== squares[i + k + 1][j]) {\n          win = false;\n          break;\n        }\n      }\n      if (win) return { val: squares[i][j], x: j, y: i, direction: 'Doc' };\n\n      // TH1: chan 2 dau cheo phai\n      win = true;\n      if (\n        j - 1 >= 0 &&\n        j + nSquareToWin < 20 &&\n        i - 1 >= 0 &&\n        i + nSquareToWin < 20 &&\n        squares[i - 1][j - 1] &&\n        squares[i + 5][j + 5] &&\n        squares[i][j] !== squares[i - 1][j - 1] &&\n        squares[i][j] !== squares[i + 5][j + 5]\n      )\n        win = false;\n      for (let k = 0; k < nSquareToWin - 1 && win; k += 1) {\n        if (\n          i + k === 19 ||\n          j + k === 19 ||\n          squares[i + k][j + k] !== squares[i + k + 1][j + k + 1]\n        ) {\n          win = false;\n          break;\n        }\n      }\n      if (win) return { val: squares[i][j], x: j, y: i, direction: 'CheoPhai' };\n\n      // TH1: chan 2 dau cheo trai\n      win = true;\n      if (\n        i - 1 >= 0 &&\n        i + nSquareToWin < 20 &&\n        j - nSquareToWin >= 0 &&\n        squares[i - 1][j + 1] &&\n        squares[i + 5][j - 5] &&\n        squares[i][j] !== squares[i - 1][j + 1] &&\n        squares[i][j] !== squares[i + 5][j - 5]\n      )\n        win = false;\n      for (let k = 0; k < nSquareToWin - 1 && win; k += 1) {\n        if (\n          i + k === 19 ||\n          j - k === 0 ||\n          squares[i + k][j - k] !== squares[i + k + 1][j - k - 1]\n        ) {\n          win = false;\n          break;\n        }\n      }\n      if (win) return { val: squares[i][j], x: j, y: i, direction: 'CheoTrai' };\n    }\n  }\n  return null;\n}\n\nfunction reverse() {\n  return { type: 'REVERSE' };\n}\n\nfunction jumpTo(move) {\n  return { type: 'JUMP_TO', move };\n}\n\nfunction resetState() {\n  return { type: 'RESET_IS_STATE' };\n}\n\nfunction clickIsState(X, Y) {\n  return { type: 'CLICK_SQUARE_STATE', X, Y };\n}\n\nfunction clickHis(stepNumber, item) {\n  return { type: 'CLICK_SQUARE_HIS', stepNumber, item };\n}\n\nfunction resetHis() {\n  return { type: 'RESET_HIS' };\n}\n\nconst action = {\n  calculateWinner,\n  reverse,\n  jumpTo,\n  resetState,\n  clickIsState,\n  clickHis,\n  resetHis\n};\n\nexport default action;\n","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport action from '../action/action';\r\nimport '../index.css';\r\n\r\nconst nSquareToWin = 5;\r\n\r\nconst Square = props => {\r\n  const rs = props;\r\n  return (\r\n    <div>\r\n      {rs.win ? (\r\n        <button\r\n          type=\"button\"\r\n          className=\"square square-highlight\"\r\n          onClick={rs.onClick}\r\n        >\r\n          {rs.value}\r\n        </button>\r\n      ) : (\r\n        <button type=\"button\" className=\"square\" onClick={rs.onClick}>\r\n          {rs.value}\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Quan ly tung o trong 1 hang\r\nclass SquareRow extends React.PureComponent {\r\n  handleClick = (i, j) => {\r\n    // Chúng ta cần clone history ra bản phụ tránh làm ảnh hưởng bản chính\r\n    const { history, status } = this.props;\r\n    const hisNow = history.slice(0, status.stepNumber + 1);\r\n    // Lấy history của lần gần nhất\r\n    const current = hisNow[hisNow.length - 1];\r\n    const squaresNow = current.squares.slice();\r\n\r\n    // clone moi dong\r\n    current.squares.map((row, idx) => {\r\n      squaresNow[idx] = current.squares[idx].slice();\r\n      return true;\r\n    });\r\n\r\n    if (current.isWin || squaresNow[i][j]) {\r\n      return; // neu da co gia tri thi ko thay doi\r\n    }\r\n    squaresNow[i][j] = status.isNext ? 'X' : 'O';\r\n    let tmp = false;\r\n    if (action.calculateWinner(squaresNow, i, j)) {\r\n      tmp = true;\r\n    }\r\n\r\n    const item = {\r\n      squares: squaresNow,\r\n      location: `${i},${j}`,\r\n      isWin: tmp,\r\n      id: status.stepNumber + 1\r\n    };\r\n\r\n    const { stepNumber } = status;\r\n\r\n    const { dispatch } = this.props;\r\n    dispatch(action.clickHis(stepNumber, item));\r\n    dispatch(action.clickIsState(i, j));\r\n  };\r\n\r\n  render() {\r\n    const { props } = this;\r\n    const squareRow = props.row.map((square, idx) => {\r\n      const k = `s${idx}`;\r\n      let win = false;\r\n      const { winner } = props;\r\n      const { rowIdx } = props;\r\n      if (winner) {\r\n        // TH win hang ngang\r\n        if (\r\n          winner.direction === 'Ngang' &&\r\n          idx >= winner.x &&\r\n          idx <= winner.x + nSquareToWin - 1 &&\r\n          rowIdx === winner.y\r\n        ) {\r\n          win = true;\r\n        }\r\n        // TH win hang doc\r\n        if (\r\n          winner.direction === 'Doc' &&\r\n          rowIdx >= winner.y &&\r\n          rowIdx <= winner.y + nSquareToWin - 1 &&\r\n          idx === winner.x\r\n        ) {\r\n          win = true;\r\n        }\r\n        // TH win cheo phai\r\n        if (\r\n          winner.direction === 'CheoPhai' &&\r\n          idx >= winner.x &&\r\n          idx <= winner.x + nSquareToWin - 1 &&\r\n          idx - winner.x === rowIdx - winner.y\r\n        ) {\r\n          win = true;\r\n        }\r\n        // TH win cheo trai\r\n        if (\r\n          winner.direction === 'CheoTrai' &&\r\n          idx <= winner.x &&\r\n          idx >= winner.x - nSquareToWin + 1 &&\r\n          winner.x - idx === rowIdx - winner.y\r\n        ) {\r\n          win = true;\r\n        }\r\n      }\r\n      return (\r\n        <Square\r\n          win={win}\r\n          value={square}\r\n          onClick={() => this.handleClick(props.rowIdx, idx)}\r\n          key={k}\r\n        />\r\n      );\r\n    });\r\n\r\n    return <div className=\"board-row\">{squareRow}</div>;\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    history: state.history,\r\n    status: state.status\r\n  };\r\n})(SquareRow);\r\n","import React from 'react';\r\nimport SquareRow from './Square';\r\nimport '../index.css';\r\n\r\n// Quan ly tung hang ban co\r\nclass Board extends React.PureComponent {\r\n  // Phương thức này trả về class Square kèm giá trị đi theo là value ( Giá trị `value` trong ReactJS được gọi là props. Tìm hiểu thêm tại đây: https://facebook.github.io/react/docs/components-and-props.html)\r\n  render() {\r\n    // row: array tung hang - idx: stt hang\r\n    const { props } = this;\r\n    const board = props.squares.map((row, idx) => {\r\n      const k = `r${idx}`;\r\n      return (\r\n        <SquareRow\r\n          winner={props.winner}\r\n          rowIdx={idx}\r\n          row={row}\r\n          onClick={props.onClick}\r\n          key={k}\r\n        />\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div>{board}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport '../index.css';\r\nimport Board from './Board';\r\nimport action from '../action/action';\r\n\r\n// Quan ly game\r\nclass Game extends React.Component {\r\n  handleReverse = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch({ type: 'REVERSE' });\r\n  };\r\n\r\n  jumpTo = move => {\r\n    const { dispatch } = this.props;\r\n    dispatch({ type: 'JUMP_TO', move });\r\n  };\r\n\r\n  handleReset = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch({ type: 'RESET_HIS' });\r\n    dispatch({ type: 'RESET_IS_STATE' });\r\n  };\r\n\r\n  render() {\r\n    // chi dung de view nen ko can clone ra ban nhap\r\n    const { history, status } = this.props;\r\n    const current = history[status.stepNumber];\r\n    const { squares } = current;\r\n    const winner = action.calculateWinner(squares, status.idX, status.idY);\r\n    let isWin;\r\n\r\n    if (winner) {\r\n      isWin = `Winner is: ${winner.val}`; // Nếu winner có giá trị thì sẽ hiển thị người thắng cuộc\r\n    } else if (status.stepNumber === 20 * 20) {\r\n      // Nếu sau 9 lần chưa có ai win thì hòa\r\n      isWin = 'No one win';\r\n    } else {\r\n      isWin = `Next player is: ${status.isNext ? 'X' : 'O'}`;\r\n    }\r\n\r\n    const moves = history.map(step => {\r\n      const { id } = step;\r\n      if (id !== 0) {\r\n        const descr = `Move ${id}: (${step.location})`;\r\n        return status.stepNumber === id ? (\r\n          <li key={id}>\r\n            <button type=\"button\" onClick={() => this.jumpTo(id)}>\r\n              <b>{descr}</b>\r\n            </button>\r\n          </li>\r\n        ) : (\r\n          <li key={id}>\r\n            <button type=\"button\" onClick={() => this.jumpTo(id)}>\r\n              {descr}\r\n            </button>\r\n          </li>\r\n        );\r\n      }\r\n      return null;\r\n    });\r\n\r\n    const arrow = status.isReverse ? '↓' : '↑';\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            winner={winner}\r\n            squares={squares}\r\n            onClick={(i, j) => this.handleClick(i, j)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>\r\n            <b>INFORMATION</b>\r\n          </div>\r\n          <p>{isWin}</p>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={() => this.handleReverse()}\r\n          >\r\n            Sort {arrow}\r\n          </button>\r\n          <ul>{status.isReverse ? moves.reverse() : moves}</ul>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={() => this.handleReset()}\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n      // gui du lieu squares cho Board\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(state => {\r\n  return {\r\n    history: state.history,\r\n    status: state.status\r\n  };\r\n})(Game);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport Game from './components/Game';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Game />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}